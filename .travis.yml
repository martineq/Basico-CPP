# Selección del lenguaje: C++
language: cpp

# Seleeción de compiladores
compiler:
  - gcc

sudo: true

#Instalacíón 
install:
  - sudo apt-get update && apt-get install -y \
    build-essential \
    python \
    git \
    cmake \
    wget \
    unzip \
    valgrind \
    tree \
    libsnappy-dev \
    zlib1g-dev \
    libbz2-dev \
    lcov \
    curl \
    libgflags-dev && \
    rm -rf /var/lib/apt/lists/* && \
    cd /home && \
    wget https://github.com/facebook/rocksdb/archive/master.zip && \
    unzip master.zip && \
    cd rocksdb-master && \
    make static_lib && \
    sudo cp librocksdb.a /usr/local/lib && \
    cd .. && \
    rm -rf rocksdb-master && \
    rm master.zip && \
    wget https://github.com/cesanta/mongoose/archive/master.zip && \
    unzip master.zip && \
    cd mongoose-master && \
    gcc -c mongoose.c && \
    ar rvs libmongoose.a mongoose.o && \
    sudo cp libmongoose.a /usr/local/lib && \
    cd .. && \
    rm -rf mongoose-master && \
    rm master.zip && \
    wget https://github.com/open-source-parsers/jsoncpp/archive/master.zip && \
    unzip master.zip && \
    cd jsoncpp-master && \
    python amalgamate.py && \
    cd dist && \
    gcc -c jsoncpp.cpp && \
    ar rvs libjsoncpp.a jsoncpp.o && \
    sudo cp libjsoncpp.a /usr/local/lib && \
    cd ../.. && \
    rm -rf jsoncpp-master && \
    rm master.zip
  - cd -

before_script:
  - mkdir server/build

script: 
  - cd server/build
  - cmake -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug ..
  - make
  - make coveralls
